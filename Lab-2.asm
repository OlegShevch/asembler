TITLE Lab-2 
;------------------------------------------------------------------------------
;ЛР  №2
;------------------------------------------------------------------------------
; Архітектура комп'ютера.
; Завдання:     Основи розробки і налагодження
; ВУЗ:          НТУУ "КПІ"
; Факультет:    ФІОТ
; Курс:         1
; Група:        ІТ-01
;------------------------------------------------------------------------------
; Автор:        __ __ __
; Дата:         __/__/__
;-----------------1.ЗАГОЛОВОК ПРОГРАМИ-----------------------
				;I.ЗАГОЛОВОК ПРОГРАМИ
IDEAL			; Директива - тип Асемблера tasm 
MODEL small		; Директива - тип моделі пам’яті 
STACK 256		; Директива - розмір стеку
;--------------------2.ПОЧАТОК СЕГМЕНТУ ДАНИХ
    DATASEG
rect_line dw 0ea30h, 0ea30h, 0ea30h, 0ea30h, 0ea30h  ; Рядок, який буде надрукований 
        dw 0ea30h, 0ea30h, 0ea30h, 0ea30h, 0ea30h
        dw 0ea30h, 0ea30h, 0ea30h, 0ea30h, 0ea30h
        dw 0ea30h, 0ea30h, 0ea30h, 0ea30h, 0ea30h
rect_line_length = $-rect_line                  ; Довжина одного рядка 

;----------------------3. ПОЧАТОК СЕГМЕНТУ КОДУ-----------------
CODESEG

Start:	
	mov	ax, @data					; ax <- @data
	mov	ds, ax						; ds <- ax
	mov	es, ax						; es <- ax

    mov dx, 4860                    ; Зміщення лівого верхньго кутка у координати (30; 10)
    mov cx, 10                      ; Лічильник кіл-сті ітерацій циклу, який буде друкувати рядки

loopStart:                          ; Мітка початку циклу
                                    ; Регістр сх використовується з преф. rep у movsb, тому спочатку потрібно його знач. зберігти в іншр регістрі 
    mov bx, cx                      ; Запис сх до bx
    mov ax, 0B800h                  ; Cегментна адресса відеопам'яті
    mov es, ax                      ; es <- ax

    mov di, dx                      ; di <- dx, початок виведення на екран
    mov si, offset rect_line        ; si <- rect_line
    mov cx, rect_line_length        ; Число байтів
    cld                             ; df встановл. напрям вперед
    rep movsb                       ; Пересил.
    mov cx, bx                      ; Команда rep movsb завершилась і знач. сх можно поверн. з bx
    add dx, 160                     ; Зміщ. наступного рядка
loop loopStart                      ; Цикл виконуватиметься доки ліч. не буде 0


	mov ah,4ch
	mov al,0					; отримання коду виходу 
	int 21h							; виклик функції DOS 4ch
	end Start
  
DOS 4ch
	end Start